###### Configuration File (XCS)

######--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
###### Major Run Parameters - Essential to be set correctly for a successful run of the algorithm
######--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
onlineProblem=multiplexer   				    # Define name of parameter as necessary for the online data generator (if offline data file is used, set to False) to work.
problemSizes=37								    # Define the sizes of the problem as the data generator (if used) to work.
------------------------------------------------
trainFile=Demo_Datasets/20Multiplexer_Data_2000.txt		# Path/FileName of training dataset
testFile=None									# Path/FileName of testing dataset.  If no testing data available or desired, put 'None'.
------------------------------------------------
outFileName=Local_Output/Run					# Path/NewName for new algorithm output files. Note: Do not give a file extension, this is done automatically.
learningIterations=500000.1000000			    # Specify complete algorithm evaluation checkpoints and maximum number of learning iterations (e.g. 1000.2000.5000 = A maximum of 5000 learning iterations with evaluations at 1000, 2000, and 5000 iterations)
N=8000										    # Maximum size of the rule population (a.k.a. Micro-classifier population size, where N is the sum of the classifier numerosities in the population)
p_spec=0.5										# The probability of specifying an attribute when covering. (1-p_spec = the probability of adding '#' in ternary rule representations). Greater numbers of attributes in a dataset will require lower values of p_spec.
usingBOA=False
multipleRuns=1									# Number of times running experiments.

######--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
###### Logistical Run Parameters
######--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
randomSeed=2018									# Set a constant random seed value to some integer (in order to obtain reproducible results). Put 'False' if none (for pseudo-random algorithm runs).
labelInstanceID=InstanceID						# Label for the data column header containing instance ID's.  If included label not found, algorithm assumes that no instance ID's were included.
labelPhenotype=Class							# Label for the data column header containing the phenotype label. (Typically 'Class' for case/control datasets)
labelMissingData=NA								# Label used for any missing data in the data set.
discreteAttributeLimit=10						# The maximum number of attribute states allowed before an attribute or phenotype is considered to be continuous (Set this value >= the number of states for any discrete attribute or phenotype in their dataset).
trackingFrequency=10000							# Specifies the number of iterations before each estimated learning progress report by the algorithm ('0' = report progress every epoch, i.e. every pass through all instances in the training data).

######--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
###### Learning Parameters - Generally just use default values.
######--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
nu=5											# (v) Power parameter used to determine the importance of high accuracy when calculating fitness. (typically set to 5, recommended setting of 1 in noisy data)
gamma=0.71										# Reinforcement Learning factor
chi=0.8											# (X) The probability of applying crossover in the GA. (typically set to 0.5-1.0)
phi=0.5											# If total prediction in matchset is less than phi times the mean prediction of population, covering occurs - not used.
mu=0.04											# (u) The probability of mutating an allele within an offspring.(typically set to 0.01-0.05)
offset_epsilon=10								# epsilon 0, offset for classifier's error, used for calculating classifier's accuracy
alpha=0.1										# coefficient for calculating classifier's accuracy
theta_GA=25										# The GA threshold; The GA is applied in a set when the average time since the last GA in the set is greater than theta_GA.
theta_mna=2										# The minimal number of actions in match set, typical set to number of phenotypes
theta_del=20									# The deletion experience threshold; The calculation of the deletion probability changes once this threshold is passed.
theta_sub=30									# The subsumption experience threshold;
error_sub=10									# Subsumption accuracy requirement
beta=0.1										# Learning parameter; Used in calculating average correct set size
delta=0.1										# Deletion parameter; Used in determining deletion vote calculation.
init_pred=10									# The initial prediction payoff
init_err=10										# The initial prediction error
init_fit=10.0									# The initial fitness for a new classifier. (typically very small, approaching but not equal to zero)
fitnessReduction=0.1							# Initial fitness reduction in GA offspring rules.
exploration=0.5									# Probability to select action by exploration.

######--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
###### Algorithm Heuristic Options
######--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
doGASubsumption=1								# Activate Subsumption? (1 is True, 0 is False).  Subsumption is a heuristic that actively seeks to increase generalization in the rule population.
doActionsetSubsumption=0                        # Action set subsumption enabled with 1, disabled with 0. Not recommended!
selectionMethod=tournament						# Select GA parent selection strategy ('tournament' or 'roulette')
theta_sel=0.5									# The fraction of the correct set to be included in tournament selection.
crossoverMethod=twopoint						# option for type of crossover

######--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
###### PopulationReboot - An option to begin XCS learning from an existing, saved rule population. Note that the training data is re-shuffled during a reboot.
######--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
doPopulationReboot=0							# Start XCS from an existing rule population? (1 is True, 0 is False).
popRebootPath=ExampleRun_eLCS_50000				# Path/FileName of previously evolved rule population output file. Include file/pathname up to until 'RulePop.txt', as this is automatically included.

######--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
###### BOA Configuration Parameters.
######--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
error_boa=400									# Maximum error for a classifiers to be selected for constructing Bayesian Network.
theta_boa=20									# Minimum experience a classifier must experience to be selected for BOA.
pred_boa=600									# Minimum prediction a classifier must have for BOA (currently not used).
maxParents=4									# Maximum incoming edges to a node allowed in Bayesian Network.
binaryCoding=True								# Base for encoding Bayesian Network, as well as Decision Trees/Graphs (is currently set in the code by number of discrete values in population).
minPopulation=0 								# Minimum number of classifiers to activate BOA.
localPopSize=10									# Number of local classifiers used for updating global model.
MCmcUpdates=18									# Number of updates by MCMC executed on parent classifiers.
showDecisionGraphs=False						# Show all decision graphs in an output file.
